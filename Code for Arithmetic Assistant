#include<stdio.h> //program start
#include<stdlib.h>
#include<time.h>
static int generate(int, int, int, int); //function 1 to generate
questions
void correct(), incorrect(); //functions 2 and 3
to generate remarks
void main()
{
int x, y, s_grade, count, option, option2, option3, n, num = 0;
double f_grade;
//s_grade=student grade, f_grade = final grade
static int generate(option2, x, y, count);
static int answer;
void correct(), incorrect();
while (num != -1)
//sentinal to ensure safe exit fom loop, loop to restart program;
loop 1 start
{
s_grade = 0;
//reset student grades to 0 and start question count again
count = 1;
printf("Welcome to Arithmetic 101!\nMade by Ayesha Tahir,
CMS 340499, BSCS-10A\nFoCP Assignment # 2\nSubmitted to Sir Jaudat
Mamoon\n\nPress 1 to continue.\n"); //introduction/starting screen
scanf_s("%d", &option);
system("cls");
printf("The rules are simple!\n\nYou can choose a difficulty
level to test yourself out of 4 possible options.\nYou can also choose
the type of arithmetic questions that you'd like to attempt.\nAnswer 8
questions out of 10 right per test and you can move on to the next
level.\nEnter -1 during the test if you wish to exit.\nThat's
it!\n\nPress 1 to continue.\n"); //rules screen
scanf_s("%d", &option);
system("cls");
printf("What type of questions do you want to have?\nPress 1
for addition type.\nPress 2 for subtraction type.\nPress 3 for
multiplication type.\nPress 4 for random type.\n");
//questions variety selection; 'option2' variable to be used for
this purpose
scanf_s("%d", &option2);
printf("You have chosen option %d.\nPress 1 to continue.\n",
option2);
scanf_s("%d", &option);
system("cls");
printf("Choose your difficulty level:\nPress 1 for
beginner.\nPress 2 for normal.\nPress 3 for intermediate.\nPress 4 for
expert.\n"); //difficulty adjusting screen; 'option3' variable to
be used for this purpose
scanf_s("%d", &option3);
printf("You have chosen option %d.\nGood luck!\nPress 1 to
continue.\n", option3);
scanf_s("%d", &option);
system("cls");
switch (option3) //adjusting difficulty level for the
randomized numbers to come later on; 9 for single digit numbers, 99
for upto double digit numbers and so on
{
case 1: n = 9; break;
case 2: n = 99; break;
case 3: n = 999; break;
default: n = 9999;
}
printf("Enter -1 to end.\n");
for (num = 0; (num != -1) && (count <= 10); count++)
/*Loop 2 start. 'count' variable for adding question number and
running this loop 10 times, equal to number of questions to be asked
per test.
This loop is for each individual test.*/
{
x = 0; //variables 'x' and 'y' used for
the main two numbers throughout the program; values are set to ensure
entrance into the next loop
y = 1;
while (y > x) //Loop 3. This loop will ensure
that the second number will never be greater than the second number.
This is done to prevent negative answers in the case of subtraction
problems
{
srand(time(NULL));
//generation of random numbers
x = 1 + rand() % n;
y = 1 + rand() % n;
}
answer = generate(option2, x, y, count);
//function call and 'answer' variable stores the answer to the
type of problem accordingly
scanf_s("%d", &num);
if (num == answer) //if user enters
answer correctly on the first try
{
correct(); //function 2
call for right answer input
s_grade++; //s_grade will
increment only if user answers the question right on the first try.
printf("Your current score is: %d/10\n%d more to
go!\n\n", s_grade, 10 - count); //status report
}
else
{
while (num != answer) //Loop 4 start. This
loop will run when either the user wants to exit the program or gives
the wrong answer
{
if (num == -1) //'-1' can be
used to exit the program.
{
system("cls");
printf("That's all for now. Come back
soon! Bye!\n");
break;
}
else
{
incorrect(); //multiple
tries after getting it wrong; function 3 call for wrong answer input.
scanf_s("%d", &num);
if (num == answer)
{
correct(); //function
2 call for right answer input after getting it wrong the first time
printf("Your current score is:
%d/10\n%d more to go!\n\n", s_grade, 10-count);
}
}
} //Loop 4 end (program exit/wrong
answer loop)
}
} //loop 2 end (test questions loop)
if (num != -1) //this condition is to ensure the sentinal
to exit the program does not print the evaluation report text
{
f_grade = ((double)s_grade / 10) * 100;
//grades calculation and display
printf("Your final grade is: %.2lf%%\n", f_grade);
if (f_grade < 75.00)
printf("It's okay, don't be sad. Stay eager to
learn and ask your teacher for extra help.\nPress 0 to exit.\n");
else
{
if(option3==4) //Recall 'option3' was for the
difficulty. This will print if the user successfully finishes the
expert level test.
printf("Congratulations! You've mastered
expert level questions! Great job!\nYou can try again if you
wish.\nPress 0 to exit.\n");
else
printf("Congratulations! You're ready to go to
the next level!\nPress 0 to exit.\n");
}
scanf_s("%d", &option);
system("cls");
}
} //loop 1 end (to loop program)
}
static int generate(int num, int x, int y, int z) //function
1 to dictate question generation
{
static int answer;
char c;
if (num == 4) //random question
generation condition in case 'option2'=4 
{
srand(time(NULL));
num = 1 + rand() % 4;
}
if (num == 1)
{
answer = x + y;
c = '+';
}
else if (num == 2)
{
answer = x - y;
c = '-';
}
else
{
answer = x * y;
c = 'x';
}
printf("Q.%d) What is %d %c %d?\n", z, x, c, y);
return answer; //this will be needed in the
main function, especially in loop 4
}
void correct() //function 2 to generate a
random remark when the user inputs the correct answer
{
int num;
srand(time(NULL));
num = 1 + rand() % 4;
switch (num)
{
case 1: printf("Very good!\n\n"); break;
case 2: printf("Excellent!\n\n"); break;
case 3: printf("Nice work!\n\n"); break;
default:printf("Keep up the good work!\n\n");
}
}
void incorrect() //function 3 to generate a random
remark when the user inputs the incorrect answer
{
int num;
srand(time(NULL));
num = 1 + rand() % 4;
switch (num)
{
case 1: printf("No. Please try again!\n"); break;
case 2: printf("Wrong. Try once more!\n"); break;
case 3: printf("Don't give up!\n"); break;
default:printf("No. Keep trying!\n");
}
}
//program end.
